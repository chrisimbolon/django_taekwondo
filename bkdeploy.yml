name: Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug Environment Variables in GitHub Actions
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}"
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}"
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}"

      - name: Create .env Locally
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" > .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      - name: Upload .env via SCP
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/apps/taekwondo-coach/.env

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -ex

            echo "🔹 Navigating to project directory..."
            cd /home/apps/taekwondo-coach || { echo "❌ Folder not found!"; exit 1; }

            echo "🔹 Checking .env file contents..."
            cat .env  # Print to check

            echo "🔹 Pulling latest code..."
            git pull origin main

            echo "🔹 Restarting Docker containers..."
            docker-compose down
            docker-compose up -d --build
            exit
          EOF
